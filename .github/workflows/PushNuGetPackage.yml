# This is a basic workflow to help you get started with Actions

name: Nuget Package Publishing

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branches: [master]
    pull_request:
        branches: [master]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
    
env:
   # Path to the solution file relative to the root of the project
   SOLUTION_FILE_PATH: .

   # Configuration type to build
   BUILD_CONFIGURATION: CI_CD

   BUILD_OUTPUT: Console/bin/Debug
   BUILD_OUTPUT_TEST: ConsoleTest/bin/Debug

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: windows-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1

            - name: .Net version info
              run: |
                  dotnet --version
                  dotnet --list-sdks
                  dotnet --list-runtimes
            - name: Install dependencies
              run: dotnet restore
            - name: Build
              run: dotnet build --configuration=${{env.BUILD_CONFIGURATION}} --no-restore
            - name: Test
              run: dotnet test --no-restore --verbosity normal
            - name: Pack
              run: dotnet pack --no-build --configuration=${{env.BUILD_CONFIGURATION}} Console/CompuMaster.Console.vbproj --output .
            # - name: PushNuget
            #  run: dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
